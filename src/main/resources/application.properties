spring.profiles.active=docker

server.port=8085

kafka.transaction-topic=transaction_events_topic

spring.kafka.bootstrap-servers=http://localhost:9092

spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.consumer.group-id=kafka-demo-123
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://localhost:8091
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.producer.acks=all
spring.kafka.producer.retries=50
spring.kafka.producer.properties.retry.backoff.ms=250
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://localhost:8091
